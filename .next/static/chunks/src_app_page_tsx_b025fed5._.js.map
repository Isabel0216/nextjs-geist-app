{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Papa, { ParseResult } from \"papaparse\";\n\ntype DataRow = {\n  [key: string]: string | number;\n};\n\ntype CodebookRow = {\n  column: string;\n  description: string;\n  unit: string;\n  source: string;\n};\n\nexport default function HomePage() {\n  const [data, setData] = useState<DataRow[]>([]);\n  const [filteredData, setFilteredData] = useState<DataRow[]>([]);\n  const [countries, setCountries] = useState<string[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState<string>(\"\");\n  const [years, setYears] = useState<string[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string>(\"\");\n  const [visibleColumns, setVisibleColumns] = useState<string[]>([\"country\", \"year\"]);\n  const [allColumns, setAllColumns] = useState<string[]>([]);\n  const [codebookData, setCodebookData] = useState<CodebookRow[]>([]);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\n  const [sortConfig, setSortConfig] = useState<{ key: string; direction: \"asc\" | \"desc\" } | null>(null);\n\n  useEffect(() => {\n    if (allColumns.length > 0) {\n      const otherCols = allColumns.filter((col) => col !== \"country\" && col !== \"year\");\n      const initialCols = [\"country\", \"year\", ...otherCols.slice(0, 8)];\n      setVisibleColumns(initialCols);\n    }\n  }, [allColumns]);\n\n  // ... [rest of your useEffect and functions]\n\n  return (\n    <div className=\"p-6 max-w-full mx-auto text-black font-sans\" style={{ backgroundColor: \"#FFF9DC\" }}>\n      <style>{`\n        table {\n          border-collapse: collapse !important;\n          border-spacing: 0 !important;\n        }\n        th, td {\n          border: 1px solid black !important;\n          padding: 12px 16px !important;\n          text-align: center !important;\n        }\n        tbody tr:nth-child(even) {\n          background-color: #FAF3B0 !important;\n        }\n        tbody tr:hover {\n          background-color: #e5e7eb !important;\n        }\n        th {\n          font-weight: 700 !important;\n          background-color: #F4D06F !important;\n        }\n      `}</style>\n\n      <h1 className=\"text-3xl font-bold mb-4 text-center text-gray-800\">\n        CO2 Emissions Data\n      </h1>\n\n      <p className=\"text-base text-gray-700 leading-relaxed text-justify mb-6\">\n        This dataset is a compilation of key metrics maintained by Our World in Data. It provides detailed information on COâ‚‚ emissions (annual, per capita, cumulative, and consumption-based), other greenhouse gases, energy mix, and relevant metrics for analyzing environmental impact. Unlike more other versions, this file focuses on a subset of variables but retains essential data such as emissions by country, year, population, GDP, and breakdowns by sector (cement, coal, gas, oil), as well as growth indicators and percentages of global contribution.\n      </p>\n\n      {/* ... [rest of your JSX] */}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAgBe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAC9C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAC9D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;QAAC;QAAW;KAAO;IAClF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqD;IAEhG,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,IAAI,WAAW,MAAM,GAAG,GAAG;gBACzB,MAAM,YAAY,WAAW,MAAM;oDAAC,CAAC,MAAQ,QAAQ,aAAa,QAAQ;;gBAC1E,MAAM,cAAc;oBAAC;oBAAW;uBAAW,UAAU,KAAK,CAAC,GAAG;iBAAG;gBACjE,kBAAkB;YACpB;QACF;6BAAG;QAAC;KAAW;IAEf,6CAA6C;IAE7C,qBACE,6LAAC;QAAI,WAAU;QAA8C,OAAO;YAAE,iBAAiB;QAAU;;0BAC/F,6LAAC;0BAAO,CAAC;;;;;;;;;;;;;;;;;;;;MAoBT,CAAC;;;;;;0BAED,6LAAC;gBAAG,WAAU;0BAAoD;;;;;;0BAIlE,6LAAC;gBAAE,WAAU;0BAA4D;;;;;;;;;;;;AAO/E;GA5DwB;KAAA","debugId":null}}]
}